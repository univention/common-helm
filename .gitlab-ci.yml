---

# SPDX-FileCopyrightText: 2024 Univention GmbH
# SPDX-License-Identifier: AGPL-3.0-only

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.36.2"
    file:
      - "defaults/nubus-workflow.yaml"
      - "defaults/stages.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/container-build.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/package-and-publish-helm-charts-external.yaml"

.lint-pre-commit:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami

container-build:
  variables:
    IMAGE_NAME: testrunner
    KANIKO_BUILD_CONTEXT: $CI_PROJECT_DIR

package-helm-charts:
  variables:
    # TODO: The udpate script is failing
    SKIP_UPDATE_HELM_VALUES: "true"
  after_script:
    # TODO: Needs a way to select which charts to package.
    #
    # We have a few charts for testing purposes and do not want them to be published
    # as a package.
    - rm -f packages/dev/test-*
    - rm -f packages/public/test-*
    - |
      echo "Left packages after cleanup"
      echo "Development files generated:"
      ls -l packages/dev
      echo "Public files generated:"
      ls -l packages/public

test-chart-common:
  stage: test
  image: "${CI_REGISTRY_IMAGE}/testrunner:${RELEASE_VERSION}"
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm dep build helm/common
  script:
    - pytest tests/common

test-chart-nubus-common:
  stage: test
  image: "${CI_REGISTRY_IMAGE}/testrunner:${RELEASE_VERSION}"
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm dep build helm/nubus-common
  script:
    - pytest tests/nubus-common

test-pytest-helm-plugin:
  stage: test
  image: "${CI_REGISTRY_IMAGE}/testrunner:${RELEASE_VERSION}"
  script:
    - pytest pytest-helm/tests

.build-and-publish-pip-package-with-uv:
  # The job currently fails for reruns on the same commit.
  # See Issue: https://github.com/astral-sh/uv/issues/7917
  allow_failure: true
  stage: publish
  image: "ghcr.io/astral-sh/uv:0.6.5-python3.13-bookworm-slim@sha256:ceb82542c321b4747444bc95419c2ee2a49fc57611588cda16455b0917a50d47"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  before_script:
    - |
      IFS='-' read -ra parts <<< "$RELEASE_VERSION"

      version_number="${parts[0]}"
      suffix="${parts[*]:1}"

      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
          modified_suffix="dev0+${suffix// /-}"
          export PACKAGE_VERSION="$version_number.$modified_suffix.${CI_COMMIT_SHORT_SHA}"
      else
          export PACKAGE_VERSION="$version_number"
      fi
      echo building and publishing pip package in '$PACKAGE_ROOT'
  script:
    - cd $PACKAGE_ROOT
    - 'sed -i "s/^version = \".*\"/version = \"$PACKAGE_VERSION\"/" pyproject.toml'
    - 'echo updated pip package version: "$PACKAGE_VERSION"'
    - 'uv build'
    - 'uv publish --index gitlab --username "gitlab-ci-token" --password $CI_JOB_TOKEN'
  variables:
    PACKAGE_ROOT: "./"

build-and-publish-pip:
  extends: .build-and-publish-pip-package-with-uv
  parallel:
    matrix:
      - PACKAGE_ROOT: "pytest-helm"
      - PACKAGE_ROOT: "helm-test-harness"
